/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sfc.sf2.core.gui;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import com.sfc.sf2.core.Manifest;
import com.sfc.sf2.core.settings.CoreSettings;
import com.sfc.sf2.core.settings.GlobalSettings;
import com.sfc.sf2.core.settings.SettingsManager;
import com.sfc.sf2.core.gui.controls.Console;
import com.sfc.sf2.helpers.PathHelpers;
import javax.swing.UIManager;

/**
 *
 * @author TiMMy
 */
public abstract class AbstractMainEditor extends javax.swing.JFrame {
        
    /**
     * Creates new form New Application
     */
    public AbstractMainEditor() {
        initComponents();
        java.awt.EventQueue.invokeLater(() -> {
            initEditor();
            SettingsManager.setSavingAllowed(true); //Slight hack to prevent controls affecting settings on initialisation
        });
    }
    
    protected void initCore(Console console) {
        //Console
        if (console != null) {
            console.initLogger("SF2 Java Suite");
        }
        //Version
        if (!SettingsManager.isRunningInEditor()) {
            String version = Manifest.getProjectVersion();
            if (version != null)
                this.setTitle(this.getTitle() + " - v" + version);
        }
        //Settings
        SettingsManager.loadGlobalSettings();
        SettingsManager.loadSettingsFile();
        CoreSettings core = SettingsManager.getSettingsStore("core");
        if (console != null) {
            console.setLogLevel(core.getLogLevel());
        }
        if (!SettingsManager.isRunningInEditor()) {
            //Check if settings panel should be shown
            java.awt.EventQueue.invokeLater(() -> {
                if (!core.arePathsValid()) {
                    Console.logger().info("Could not automatically detect app path : " + PathHelpers.getApplicationpath().toString());
                    jFrameSettings.setVisible(true);
                }
            });
        }
    }
    
    protected void initEditor() {
        
    }
    
    protected void onDataLoaded() {
        
    }
    
    public static void programSetup() {
        //Hack to determine if project is running from editor (IDE) or is a build. (property 'user.dir' is blank if in editor)
        String dir = System.getProperty("user.dir");
        SettingsManager.setRunningInEditor(dir == null || dir.length() == 0);
        SettingsManager.loadGlobalSettings();
        
        //Set look and feel
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            //Have to load core settings first to check theme                                     
            if (SettingsManager.getGlobalSettings().getIsDarkTheme())
                FlatDarkLaf.setup();
            else
                FlatLightLaf.setup();
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(AbstractMainEditor.class.getName()).log(java.util.logging.Level.SEVERE, "FlatLaf theme could not be loaded. Loading default theme instead", ex);
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException e) {
                java.util.logging.Logger.getLogger(AbstractMainEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
            }
        }
        //</editor-fold>
        //</editor-fold>
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrameSettings = new javax.swing.JFrame();
        jPanelSettings = new javax.swing.JPanel();
        jCheckBoxPrioritise = new javax.swing.JCheckBox();
        infoButton3 = new com.sfc.sf2.core.gui.controls.InfoButton();
        directoryButtonBasePath = new com.sfc.sf2.core.gui.controls.DirectoryButton();
        directoryButtonIncbinPath = new com.sfc.sf2.core.gui.controls.DirectoryButton();
        infoButton1 = new com.sfc.sf2.core.gui.controls.InfoButton();
        infoButton2 = new com.sfc.sf2.core.gui.controls.InfoButton();
        jRadioThemeLight = new javax.swing.JRadioButton();
        jRadioThemeDark = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        buttonGroupTheme = new javax.swing.ButtonGroup();
        jPanel13 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel15 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuSettings = new javax.swing.JMenu();
        jMenuItemSettings = new javax.swing.JMenuItem();

        jFrameSettings.setTitle("Settings");
        jFrameSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jFrameSettings.setLocationByPlatform(true);
        jFrameSettings.setMinimumSize(new java.awt.Dimension(500, 200));
        jFrameSettings.setName("Frame Settings"); // NOI18N
        jFrameSettings.setResizable(false);
        jFrameSettings.setSize(new java.awt.Dimension(500, 250));
        jFrameSettings.setType(java.awt.Window.Type.POPUP);
        jFrameSettings.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jFrameSettingsWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                jFrameSettingsWindowOpened(evt);
            }
        });

        jPanelSettings.setMinimumSize(new java.awt.Dimension(400, 200));
        jPanelSettings.setPreferredSize(new java.awt.Dimension(400, 200));

        jCheckBoxPrioritise.setSelected(true);
        jCheckBoxPrioritise.setText("Prioritise local path");
        jCheckBoxPrioritise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPrioritiseActionPerformed(evt);
            }
        });

        infoButton3.setMessageText("<html>If the .jar file detects that it is inside SF2DISASM then it will assume that the user wants to load data from this SF2DISASM directory.<br>Toggle this off and use the 'base folder' and 'incbin folder' to point to a custom directory.<br><b>Most users do not need to edit this.</b></html>");
        infoButton3.setText("");

        directoryButtonBasePath.setLabelText("Base folder :");
        directoryButtonBasePath.setMinimumSize(new java.awt.Dimension(150, 25));
        directoryButtonBasePath.setPreferredSize(new java.awt.Dimension(200, 25));

        directoryButtonIncbinPath.setLabelText("incbin folder :");
        directoryButtonIncbinPath.setMinimumSize(new java.awt.Dimension(150, 25));
        directoryButtonIncbinPath.setPreferredSize(new java.awt.Dimension(200, 25));

        infoButton1.setMessageText("<html>Base folder is where the .jar file is expected to be run from.<br><b>Most users do not need to edit this path.</b></html>");
        infoButton1.setText("");

        infoButton2.setMessageText("<html>Incbin is the root folder for the disassemby (usually SF2DISASM\\disasm\\)<br><b>Most users do not need to edit this path.</b></html>");
        infoButton2.setText("");

        buttonGroupTheme.add(jRadioThemeLight);
        jRadioThemeLight.setSelected(true);
        jRadioThemeLight.setText("Light");

        buttonGroupTheme.add(jRadioThemeDark);
        jRadioThemeDark.setText("Dark");

        jLabel6.setText("<html>Theme <i>(Requires restart)</i>  :</html>");

        javax.swing.GroupLayout jPanelSettingsLayout = new javax.swing.GroupLayout(jPanelSettings);
        jPanelSettings.setLayout(jPanelSettingsLayout);
        jPanelSettingsLayout.setHorizontalGroup(
            jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSettingsLayout.createSequentialGroup()
                        .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directoryButtonBasePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(directoryButtonIncbinPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1)
                            .addGroup(jPanelSettingsLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioThemeLight)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioThemeDark)
                                .addGap(0, 125, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infoButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(infoButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelSettingsLayout.createSequentialGroup()
                        .addComponent(jCheckBoxPrioritise)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infoButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelSettingsLayout.setVerticalGroup(
            jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSettingsLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(infoButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxPrioritise))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(infoButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directoryButtonBasePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(infoButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directoryButtonIncbinPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRadioThemeDark)
                    .addComponent(jRadioThemeLight)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrameSettingsLayout = new javax.swing.GroupLayout(jFrameSettings.getContentPane());
        jFrameSettings.getContentPane().setLayout(jFrameSettingsLayout);
        jFrameSettingsLayout.setHorizontalGroup(
            jFrameSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrameSettingsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanelSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jFrameSettingsLayout.setVerticalGroup(
            jFrameSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameSettingsLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanelSettings, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SF2 App");

        jSplitPane1.setDividerLocation(450);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setOneTouchExpandable(true);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1012, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSplitPane1.setTopComponent(jPanel15);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1012, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );

        jSplitPane1.setBottomComponent(jPanel1);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        jMenuFile.setText("File");

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuSettings.setText("Settings");

        jMenuItemSettings.setText("Settings");
        jMenuItemSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSettingsActionPerformed(evt);
            }
        });
        jMenuSettings.add(jMenuItemSettings);

        jMenuBar1.add(jMenuSettings);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1028, 664));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        dispose();
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSettingsActionPerformed
        jFrameSettings.setVisible(true);
    }//GEN-LAST:event_jMenuItemSettingsActionPerformed

    private void jFrameSettingsWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jFrameSettingsWindowClosing
        CoreSettings core = SettingsManager.getSettingsStore("core");
        core.setPrioritiseLocalPath(jCheckBoxPrioritise.isSelected());
        core.setBasePath(directoryButtonBasePath.getDirectoryPath());
        core.setIncbinPath(directoryButtonIncbinPath.getDirectoryPath());
        SettingsManager.getGlobalSettings().setIsDarkTheme(jRadioThemeDark.isSelected());
        SettingsManager.saveGlobalSettingsFile();
        SettingsManager.saveSettingsFile();
    }//GEN-LAST:event_jFrameSettingsWindowClosing

    private void jFrameSettingsWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jFrameSettingsWindowOpened
        jFrameSettings.setLocationRelativeTo(this);
        jFrameSettings.setSize(jFrameSettings.getPreferredSize());
        GlobalSettings global = SettingsManager.getGlobalSettings();
        CoreSettings core = SettingsManager.getSettingsStore("core");
        jCheckBoxPrioritise.setSelected(core.isPrioritiseLocalPath());
        jRadioThemeLight.setSelected(!global.getIsDarkTheme());
        jRadioThemeDark.setSelected(global.getIsDarkTheme());
        if (core.arePathsValid()) {
            directoryButtonBasePath.setDirectoryPath(core.getBasePath());
            directoryButtonIncbinPath.setDirectoryPath(core.getIncbinPath());
        } else {
            directoryButtonBasePath.setDirectoryPath(PathHelpers.getApplicationpath().toString());
            directoryButtonIncbinPath.setDirectoryPath(PathHelpers.getApplicationpath().toString());
        }
        jCheckBoxPrioritiseActionPerformed(null);
    }//GEN-LAST:event_jFrameSettingsWindowOpened

    private void jCheckBoxPrioritiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPrioritiseActionPerformed
        CoreSettings core = SettingsManager.getSettingsStore("core");
        directoryButtonBasePath.setEnabled(!(jCheckBoxPrioritise.isSelected() && core.areLocalPathsValid()));
        directoryButtonIncbinPath.setEnabled(!(jCheckBoxPrioritise.isSelected() && core.areLocalPathsValid()));
    }//GEN-LAST:event_jCheckBoxPrioritiseActionPerformed
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTheme;
    private com.sfc.sf2.core.gui.controls.DirectoryButton directoryButtonBasePath;
    private com.sfc.sf2.core.gui.controls.DirectoryButton directoryButtonIncbinPath;
    private com.sfc.sf2.core.gui.controls.InfoButton infoButton1;
    private com.sfc.sf2.core.gui.controls.InfoButton infoButton2;
    private com.sfc.sf2.core.gui.controls.InfoButton infoButton3;
    private javax.swing.JCheckBox jCheckBoxPrioritise;
    private javax.swing.JFrame jFrameSettings;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemSettings;
    private javax.swing.JMenu jMenuSettings;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanelSettings;
    private javax.swing.JRadioButton jRadioThemeDark;
    private javax.swing.JRadioButton jRadioThemeLight;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
