name: Auto Tag and Release Java Builds

on:
  push:
    branches:
      - main
    paths:
      - '**/version.properties'

jobs:
  tag-build-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository (full history)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Detect changed version.properties files
      id: detect_changes
      run: |
        changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- '**/version.properties')

        if [ -z "$changed_files" ]; then
          echo "No version.properties files changed."
          echo "should_run=false" >> $GITHUB_OUTPUT
        else
          echo "Found changes in:"
          echo "$changed_files"
          echo "should_run=true" >> $GITHUB_OUTPUT
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$changed_files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Tag and build projects
      if: steps.detect_changes.outputs.should_run == 'true'
      id: build_and_tag
      run: |
        mkdir -p artifacts
        releases=""

        echo "${{ steps.detect_changes.outputs.changed_files }}" | while read file_path; do
          if [ -f "$file_path" ]; then
            dir_path=$(dirname "$file_path")
            folder_name=$(basename "$dir_path")
            version=$(grep '^version:' "$file_path" | cut -d':' -f2 | xargs)
            tag_name="${folder_name}-${version}"

            echo "==> Processing $folder_name ($version) in $dir_path"

            # Git tagging
            git config user.name 'GitHub Actions'
            git config user.email 'actions@github.com'

            if git rev-parse "$tag_name" >/dev/null 2>&1; then
              echo "Tag $tag_name already exists. Skipping tag creation."
            else
              echo "Creating Git tag $tag_name"
              git tag "$tag_name"
              git push origin "$tag_name"
            fi

            # Run Ant build
            mkdir -p "$dir_path/dist/lib"
            echo "Running Ant build in $dir_path with JDK 17"
            export JAVA_HOME="${JAVA_HOME_17_X64}"
            export PATH="$JAVA_HOME/bin:$PATH"
            java -version  # Confirm JDK version
            ant -Dplatforms.JDK_17.home="$JAVA_HOME" -f "$dir_path/build.xml" package-for-store

            # Find the generated JAR
            jar_file=$(find "$dir_path/store" -name '*.jar' | head -n 1)
            if [ -f "$jar_file" ]; then
              echo "Found jar: $jar_file"
              cp "$jar_file" "artifacts/$(basename "$jar_file")"

              # Append to release list
              echo "$tag_name|artifacts/$(basename "$jar_file")" >> release_list.txt
            else
              echo "JAR not found in $dir_path/store"
            fi
          fi
        done

    - name: Create GitHub Releases
      if: steps.detect_changes.outputs.should_run == 'true'
      run: |
        while IFS='|' read -r tag jar_path; do
          echo "Creating release for $tag with artifact $jar_path"
          gh release create "$tag" "$jar_path" --title "$tag" --notes "Automated release for $tag"
        done < release_list.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
